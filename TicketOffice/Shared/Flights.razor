@page "/flights"
@inject NavigationManager navManager
@inject Blazored.LocalStorage.ILocalStorageService storage

<div class="table-responsive">
    <table class="table table-striped">
        <thead class="thead-light">
            <tr>
                <th>Номер рейса</th>
                <th>Пункт отправления</th>
                <th>Пункт назначения</th>
                <th>Дата</th>
                <th>Время</th>
                <th>Класс полёта</th>
            </tr>
        </thead>
        <tbody>

            @if (searchFlight != null)
            {
                FillSearchingFlightsList(searchFlight);

                @if (searchingFlightsList.Count == 0)
                {
                    navManager.NavigateTo("search-error");
                }

                @foreach (var item in searchingFlightsList)
                {
                    <tr>
                        <SingleFlight flight="item"></SingleFlight>
                    </tr>
                }

                storage.RemoveItemAsync("SearchFlight");
            }

            else
            {
                @foreach (var item in flightsList)
                {
                    <tr>
                        <SingleFlight flight="item"></SingleFlight>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>


@code {

    DateTime today = DateTime.Today;
    DateTime currentHour = DateTime.UtcNow;
    public string FlightNumber { get; set; }
    public string PointOfDeparture { get; set; }
    public string PointOfDestination { get; set; }
    [BsonDateTimeOptions(Kind = DateTimeKind.Utc)]
    public DateTime Date { get; set; } = DateTime.Today;
    public DateTime Time { get; set; }
    public string ClassType { get; set; }

    void DateRender(DateRenderEventArgs args)
    {
        if (args.Date < DateTime.Today.Date)
        {
            args.Disabled = true;
        }

    }

    Flight searchFlight;
    List<Flight> searchingFlightsList = new List<Flight>();
    public List<Flight> flightsList = new List<Flight>();

    protected override async Task OnInitializedAsync()
    {
        searchFlight = await storage.GetItemAsync<Flight>("SearchFlight");
        var client = new MongoClient("mongodb://localhost");
        var database = client.GetDatabase("TicketOffice");
        var collection = database.GetCollection<Flight>("Flights").AsQueryable();

        foreach (var item in collection)
        {
            Flight flight = new Flight(item.FlightNumber, item.PointOfDeparture, item.PointOfDestination, item.Date, item.Time, item.ClassType);
            flightsList.Add(flight);

        }
    }
    void SearchError()
    {
        navManager.NavigateTo("search-error");
    }

    void FillSearchingFlightsList(Flight searchFlight)
    {
        var client = new MongoClient("mongodb://localhost");
        var database = client.GetDatabase("TicketOffice");
        var collection = database.GetCollection<Flight>("Flights").AsQueryable();

        //логика поиска рейсов по критериям, заданным на главном экране
        foreach (var item in collection)
        {
            if (searchFlight.PointOfDeparture != null)
            {
                if (searchFlight.PointOfDestination != null)
                {
                    if (searchFlight.Date != DateTime.MinValue)
                    {
                        if (searchFlight.ClassType != null)
                        {
                            if (item.PointOfDeparture == searchFlight.PointOfDeparture && item.PointOfDestination == searchFlight.PointOfDestination && item.Date == searchFlight.Date && item.ClassType == searchFlight.ClassType)
                            {
                                searchingFlightsList.Add(new Flight(item.FlightNumber, item.PointOfDeparture, item.PointOfDestination, item.Date, item.Time, item.ClassType));
                            }
                        }

                        else
                        {
                            if (item.PointOfDeparture == searchFlight.PointOfDeparture && item.PointOfDestination == searchFlight.PointOfDestination && item.Date == searchFlight.Date)
                            {
                                searchingFlightsList.Add(new Flight(item.FlightNumber, item.PointOfDeparture, item.PointOfDestination, item.Date, item.Time, item.ClassType));
                            }
                        }
                    }

                    else
                    {
                        if (searchFlight.ClassType != null)
                        {
                            if (item.PointOfDeparture == searchFlight.PointOfDeparture && item.PointOfDestination == searchFlight.PointOfDestination && item.ClassType == searchFlight.ClassType)
                            {
                                searchingFlightsList.Add(new Flight(item.FlightNumber, item.PointOfDeparture, item.PointOfDestination, item.Date, item.Time, item.ClassType));
                            }
                        }

                        else
                        {
                            if (item.PointOfDeparture == searchFlight.PointOfDeparture && item.PointOfDestination == searchFlight.PointOfDestination)
                            {
                                searchingFlightsList.Add(new Flight(item.FlightNumber, item.PointOfDeparture, item.PointOfDestination, item.Date, item.Time, item.ClassType));
                            }
                        }
                    }
                }

                else
                {
                    if (searchFlight.Date != DateTime.MinValue)
                    {
                        if (searchFlight.ClassType != null)
                        {
                            if (item.PointOfDeparture == searchFlight.PointOfDeparture && item.Date == searchFlight.Date && item.ClassType == searchFlight.ClassType)
                            {
                                searchingFlightsList.Add(new Flight(item.FlightNumber, item.PointOfDeparture, item.PointOfDestination, item.Date, item.Time, item.ClassType));
                            }
                        }

                        else
                        {
                            if (item.PointOfDeparture == searchFlight.PointOfDeparture && item.Date == searchFlight.Date)
                            {
                                searchingFlightsList.Add(new Flight(item.FlightNumber, item.PointOfDeparture, item.PointOfDestination, item.Date, item.Time, item.ClassType));
                            }
                        }
                    }

                    else
                    {
                        if (searchFlight.ClassType != null)
                        {
                            if (item.PointOfDeparture == searchFlight.PointOfDeparture && item.ClassType == searchFlight.ClassType)
                            {
                                searchingFlightsList.Add(new Flight(item.FlightNumber, item.PointOfDeparture, item.PointOfDestination, item.Date, item.Time, item.ClassType));
                            }
                        }

                        else
                        {
                            if (item.PointOfDeparture == searchFlight.PointOfDeparture)
                            {
                                searchingFlightsList.Add(new Flight(item.FlightNumber, item.PointOfDeparture, item.PointOfDestination, item.Date, item.Time, item.ClassType));
                            }
                        }
                    }


                }
            }

            else
            {
                if (searchFlight.PointOfDestination != null)
                {
                    if (searchFlight.Date != DateTime.MinValue)
                    {
                        if (searchFlight.ClassType != null)
                        {
                            if (item.PointOfDestination == searchFlight.PointOfDestination && item.Date == searchFlight.Date && item.ClassType == searchFlight.ClassType)
                            {
                                searchingFlightsList.Add(new Flight(item.FlightNumber, item.PointOfDeparture, item.PointOfDestination, item.Date, item.Time, item.ClassType));
                            }
                        }

                        else
                        {
                            if (item.PointOfDestination == searchFlight.PointOfDestination && item.Date == searchFlight.Date)
                            {
                                searchingFlightsList.Add(new Flight(item.FlightNumber, item.PointOfDeparture, item.PointOfDestination, item.Date, item.Time, item.ClassType));
                            }
                        }
                    }

                    else
                    {
                        if (searchFlight.ClassType != null)
                        {
                            if (item.PointOfDestination == searchFlight.PointOfDestination && item.ClassType == searchFlight.ClassType)
                            {
                                searchingFlightsList.Add(new Flight(item.FlightNumber, item.PointOfDeparture, item.PointOfDestination, item.Date, item.Time, item.ClassType));
                            }
                        }

                        else
                        {
                            if (item.PointOfDestination == searchFlight.PointOfDestination)
                            {
                                searchingFlightsList.Add(new Flight(item.FlightNumber, item.PointOfDeparture, item.PointOfDestination, item.Date, item.Time, item.ClassType));
                            }
                        }
                    }
                }

                else
                {
                    if (searchFlight.Date != DateTime.MinValue)
                    {
                        if (searchFlight.ClassType != null)
                        {
                            if (item.Date == searchFlight.Date && item.ClassType == searchFlight.ClassType)
                            {
                                searchingFlightsList.Add(new Flight(item.FlightNumber, item.PointOfDeparture, item.PointOfDestination, item.Date, item.Time, item.ClassType));
                            }
                        }

                        else
                        {
                            if (item.Date == searchFlight.Date)
                            {
                                searchingFlightsList.Add(new Flight(item.FlightNumber, item.PointOfDeparture, item.PointOfDestination, item.Date, item.Time, item.ClassType));
                            }
                        }
                    }

                    else
                    {
                        if (searchFlight.ClassType != null)
                        {
                            if (item.ClassType == searchFlight.ClassType)
                            {
                                searchingFlightsList.Add(new Flight(item.FlightNumber, item.PointOfDeparture, item.PointOfDestination, item.Date, item.Time, item.ClassType));
                            }
                        }
                    }
                }
            }
        }
    }
}
