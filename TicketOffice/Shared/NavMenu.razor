@inject Blazored.LocalStorage.ILocalStorageService storage
<div class="top-row pl-4 navbar navbar-dark">
        <a class="navbar-brand" href="">TicketOffice</a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass"  @onclick="ToggleNavMenu">
    <ul class="nav flex-column">

        @if (IsUserLogged && CurrentUser.Role == "Администратор")
        {
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="control-panel">
                    <span class="oi oi-key" aria-hidden="true"></span> Панель управления
                </NavLink>
            </li>
        }

        @if (IsUserLogged && CurrentUser.Role != "Администратор")
        {
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="profile">
                    <span class="oi oi-person" aria-hidden="true"></span> Личный кабинет
                </NavLink>
            </li>
        }

        <li class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Купить билет
            </NavLink>
        </li>

        <li class="nav-item px-3">
            <NavLink class="nav-link" href="flights">
                <span class="oi oi-book" aria-hidden="true"></span> Рейсы
            </NavLink>
        </li>

        <li class="nav-item px-3">
            <NavLink class="nav-link" href="recommendations">
                <span class="oi oi-fire" aria-hidden="true"></span> Рекомендации
            </NavLink>
        </li>
    </ul>
</div>

@code {
    private bool collapseNavMenu = true;
    public bool IsUserLogged { get; set; }
    public User CurrentUser { get; set; }
    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override async Task OnInitializedAsync()
    {
        CurrentUser = await storage.GetItemAsync<User>("CurrentUser");
        IsUserLogged = await storage.GetItemAsync<bool>("IsUserLogged");
    }
}
