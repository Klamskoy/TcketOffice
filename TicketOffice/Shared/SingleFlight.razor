@inject NavigationManager navManager
@inject Blazored.LocalStorage.ILocalStorageService storage
<td>@flight.FlightNumber</td>
<td>@flight.PointOfDeparture</td>
<td>@flight.PointOfDestination</td>
<td>@flight.Date.ToString("dd.MM.yyyy")</td>
<td>@flight.Time.ToString("HH:mm")</td>
<td>
    @flight.ClassType
    <br />
    @if (IsUserLogged)
    {
        @if (CurrentUser != null && CurrentUser.Role != "Администратор")
        {
                if (AlreadyBought)
                {
                    <button class="btn btn-primary" style="margin-left:15px;" disabled @onclick="Buy">Купить</button>
                }
                else
                {
                    <button class="btn btn-primary" style="margin-left:15px;" @onclick="Buy">Купить</button>
                }

        }
    }
    else
    {
<td><button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#staticBackdrop1">Купить</button></td>
    }
</td>


@code {

    [Parameter] public Flight flight { get; set; }
    public User CurrentUser { get; set; }
    public bool IsUserLogged { get; set; }
    public bool AlreadyBought { get; set; } = false;

    List<Ticket> tickets = new List<Ticket>();

    private void Buy()
    {

        Ticket ticket = new Ticket(flight.FlightNumber, flight.PointOfDeparture, flight.PointOfDestination, flight.Date, flight.Time, flight.ClassType, CurrentUser.Name, CurrentUser.Surname, CurrentUser.Patronymic);

        var client = new MongoClient("mongodb://localhost");
        var database = client.GetDatabase("TicketOffice");
        var collection = database.GetCollection<Ticket>("Tickets");
        collection.InsertOne(ticket);
        navManager.NavigateTo("profile");



    }
    protected override async Task OnInitializedAsync()
    {
        IsUserLogged = await storage.GetItemAsync<bool>("IsUserLogged");
        CurrentUser = await storage.GetItemAsync<User>("CurrentUser");
        if(IsUserLogged)
        {
            var client = new MongoClient("mongodb://localhost");
            var database = client.GetDatabase("TicketOffice");
            var collection = database.GetCollection<Ticket>("Tickets").AsQueryable();
            foreach (var item in collection)
            {
                if (item.FlightNumber == flight.FlightNumber && item.UsersName == CurrentUser.Name && item.UsersSurname == CurrentUser.Surname && item.UsersPatronymic == CurrentUser.Patronymic)
                {
                    AlreadyBought = true;
                }
            }
        }

    }
}
