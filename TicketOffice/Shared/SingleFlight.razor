@inject NavigationManager navManager
@inject Blazored.LocalStorage.ILocalStorageService storage
<td>@flight.FlightNumber</td>
<td>@flight.PointOfDeparture</td>
<td>@flight.PointOfDestination</td>
<td>@flight.Date.ToString("dd.MM.yyyy")</td>
<td>@flight.Time.ToString("hh:mm")</td>
<td>
    @flight.ClassType
    <br />
    @if (IsUserLogged)
    {
        @if (CurrentUser != null && CurrentUser.Role != "Администратор")
        {
            <button class="btn btn-primary" @onclick="Buy">Купить</button>
        }
    }
    else
    {
    <td><button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#staticBackdrop1">Купить</button></td>
    }
</td>


@code {

    [Parameter] public Flight flight { get; set; }
    public User CurrentUser { get; set; }
    public bool IsUserLogged { get; set; }
    private void Buy()
    {

        Ticket ticket = new Ticket(flight.FlightNumber, flight.PointOfDeparture, flight.PointOfDestination, flight.Date, flight.Time, flight.ClassType, CurrentUser.Name, CurrentUser.Surname, CurrentUser.Patronymic);

        var client = new MongoClient("mongodb://localhost");
        var database = client.GetDatabase("TicketOffice");
        var collection = database.GetCollection<Ticket>("Tickets");
        collection.InsertOne(ticket);
        navManager.NavigateTo("profile");



    }
    protected override async Task OnInitializedAsync()
    {
        IsUserLogged = await storage.GetItemAsync<bool>("IsUserLogged");
        CurrentUser = await storage.GetItemAsync<User>("CurrentUser");

    }
}
